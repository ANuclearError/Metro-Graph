================================================================================

METRO-GRAPH VERSION HISTORY

================================================================================

Version 0.0: Initial Implementation

Commenced: 01/04/2015
Finished : -

--------------------------------------------------------------------------------

	v0.0 - 01/04/2015
	
		- Project preparation:
			- Created Git repository with .gitignore inclusions.
			- Created README.md with project information. 
			- Created VERSIONHISTORY.txt
			- Created MVC packages with package-info classes containing Javadoc
			  and other package related things.
			- Created Driver class in controller, currently printing program
			  information.
	
	v0.1 - 01/04/2015
	
		- View
			- Added Input and Output classes that are used to communicate with
			  the user. Any user input or output is delegated to this class,
			  rather than using System.out and such.
	
	v0.2 - 02/04/2014
	
		- Model
			- Parser package has been created, containing classes handling
			  file parsing.
			- The MetroMapParser class was imported, 
			- The BadFileException class was also created to handle errors
			  within the parser's syntax.
		- View
			- The output class now has extra methods to allow for lineBreaks of
			  various sizes rather than always being 80 chars.
		
	v0.3 - 03/04/2014
	
		- Model
			- Created basic interfaces for nodes, edges and multigraphs.
			
	v0.4 - 03/04/2014
	
		- Model
			- Created implementations of the interfaces introduced in v0.3.
				- Station, implement nodes
				- Line, implements edges
				- Metro, implements multigraphs
		- View
			- Changed line(String line) method to print(Object line) so that any
			  object can be printed to console, not just strings.
	
	v0.5 - 04/04/2014
	
		- Controller
			- Created the MetroSystem class which creates the graph based on the
			  parser.
		- Model
			- Changed how edges work so that they only deal with the IDs rather
			  than the actual nodes themselves.
			- Changed the parser to deal with this change.
			
	v0.6 - 04/04/2014
		- Controller
			- Implemented the 'Find Station' feature, which allows for the user
			  to find a station with a label containing the user's input.
		- Model
			- Implemented a toString() of stations, to allow for nice display.
			
	v0.7 - 04/05/2014
		- Controller
			- After a long break, reset the controller to try and devise a
			better way of structuring the logic.
			- Find Station has been removed, now the program just loops through
			  Find Route until exit.
			- Implemented controller logic for finding routes, handling getting
			  the desired stations.
		- Model
			- Added methods for finding stations by label instead of ID.